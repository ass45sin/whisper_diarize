# Generated by direnv_smart_setup.sh
# --- Auto-generated .envrc for Conda ---
export CONDA_ENV_NAME="proj-whisper_diarize"

# Set up OpenBLAS environment variables
export LDFLAGS="-L/opt/homebrew/opt/openblas/lib"
export CPPFLAGS="-I/opt/homebrew/opt/openblas/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/openblas/lib/pkgconfig"

# Source install_requirements script
source "$PWD/install_requirements.sh"

# Create conda environment if it doesn't exist
if ! conda info --envs | grep -q "$CONDA_ENV_NAME"; then
    echo "ðŸ“¦ Creating new Conda environment: $CONDA_ENV_NAME"
    # Create environment with Python and essential packages
    conda create -y -n "$CONDA_ENV_NAME" "python=3.11" pip setuptools wheel numpy scipy
fi

# Activate conda environment
if [ "$(conda info --envs | grep '*' | awk '{print $1}')" != "$CONDA_ENV_NAME" ]; then
    eval "$(conda shell.bash hook)"
    conda activate "$CONDA_ENV_NAME"
fi

# Install requirements if they exist
if [ -f requirements.txt ]; then # This refers to requirements.txt in the project dir, context of .envrc
    if [ ! -f .requirements_installed ] || [ requirements.txt -nt .requirements_installed ]; then
        install_requirements "requirements.txt" "conda" # This calls the function defined in install_requirements.sh
    fi
fi

# Add project root to PYTHONPATH for local imports
export PYTHONPATH="$PWD:${PYTHONPATH:-}"

# Activate local bin if it exists
if [ -d "$PWD/.venv/bin" ]; then
    PATH_add "$PWD/.venv/bin"
fi
